name: Development workflow

on:
  push:
    branches:
      - develop
      - feature/*
  pull_request:
    branches:
      - 'develop'
      - 'feature/*'

jobs:
  build-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare PNPM
        uses: ./.github/actions/prepare-pnpm

      - name: Prepare Next.js build cache
        uses: ./.github/actions/build-cache

      - name: Install dependencies
        shell: bash
        run: pnpm i --frozen-lockfile

      - name: Check if it builds
        shell: bash
        run: pnpm build

  test-component:
    needs: [build-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare PNPM
        uses: ./.github/actions/prepare-pnpm

      - name: Run Cypress component testing
        uses: cypress-io/github-action@v6
        with:
          component: true

  test-e2e:
    needs: [build-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare PNPM
        uses: ./.github/actions/prepare-pnpm

      - name: Install dependencies
        shell: bash
        run: pnpm i --frozen-lockfile

      - name: Prepare Next.js build cache
        uses: ./.github/actions/build-cache
        id: build-cache

      # This will run if no builds were found in the cache
      - if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        name: Build E2E environment
        shell: bash
        run: pnpm build

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v7

      # From https://stackoverflow.com/a/67290085
      - name: Convert branch name into docker tags
        run: |
          BRANCH_NAME=${{ steps.branch-name.outputs.base_ref_branch || steps.branch-name.outputs.current_branch }}
          CONVERTED="${BRANCH_NAME/\//\-}"
          echo Will use the tag $CONVERTED for the docker image
          echo "converted=$CONVERTED" >> $GITHUB_OUTPUT
        id: convert

      # This is to work-around the pull limit from the Docker hub if no user was logged in
      # Images that we build are published on GHCR, but some images used for our compose files are pulled
      # from the Docker hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Start BE environment for E2E tests
        shell: bash
        run: cd docker/e2e-be && docker-compose up -d
        env:
          E2E_BACKEND_IMAGE: ghcr.io/jonfelixrico/gowpet-pos-backend:${{ steps.convert.outputs.converted }}

      - name: Run E2E tests
        uses: cypress-io/github-action@v6
        with:
          start: pnpm start
          wait-on: 'http://localhost:3000, http://localhost:3005/authenticate/publicKey'
          wait-on-timeout: 90

  docker-build:
    needs: [test-e2e, test-component]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/jonfelixrico/gowpet-pos-backend

      - name: Build image and push to GHCR
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.meta.outputs.tags }}
          context: .
          push: ${{ github.event_name == 'push' && github.ref_name == 'develop'  }}
